{"remainingRequest":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzg/Downloads/bjy-live-vue-demo/src/components/SettingPanel/MicMenu.vue?vue&type=style&index=0&id=019a615b&lang=scss&scoped=true&","dependencies":[{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/src/components/SettingPanel/MicMenu.vue","mtime":1611227050000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLy9AaW1wb3J0IHVybCgpOyDlvJXlhaXlhazlhbFjc3PnsbsK"},{"version":3,"sources":["MicMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA","file":"MicMenu.vue","sourceRoot":"src/components/SettingPanel","sourcesContent":["<template>\n  <div id=\"menu-mic\"></div>\n</template>\n\n<script>\nimport language from \"../../language/main\";\n\nlet store = BJY.store;\nlet config = BJY.config;\n\nexport default {\n  components: {},\n  data() {\n    return {};\n  },\n  computed: {},\n  watch: {},\n  methods: {},\n  created() {},\n  mounted() {\n    // 创建麦克风菜单\n    BJY.MicMenu.create({\n      element: $(\"#menu-mic\"),\n      maxVolume: 100,\n      canSelectDevice: true,\n      canAdjustVolume: true,\n      onSwitcherClick: () => {\n        if (!store.get(\"class.started\")) {\n          // 针对教室状态给出相应的提示，你可以使用任何你喜欢的UI来处理他们，这里我使用的是自定义的全局tip，下同\n          this.$Toast(language.TIP_CLASS_NOT_START);\n          return;\n        }\n        if (store.get(\"class.speakState\") == config.SPEAK_STATE_LIMIT) {\n          this.$Toast(language.TIP_SPEAK_LIMIT);\n          return;\n        }\n        // 获取我的播放器\n        var player = BJY.Player.instances[BJY.store.get(\"user.id\")];\n        // 设置麦克风设备\n        BJY.userPublish.setDevice(player, null, !player.audioOn);\n      },\n    });\n  },\n  beforeDestroy() {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n//@import url(); 引入公共css类\n</style>\n"]}]}