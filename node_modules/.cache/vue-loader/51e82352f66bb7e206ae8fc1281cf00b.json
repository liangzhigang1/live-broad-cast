{"remainingRequest":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzg/Downloads/bjy-live-vue-demo/src/components/FunctionPanel/SpeakApplyMenu.vue?vue&type=style&index=0&id=03338eee&lang=scss&scoped=true&","dependencies":[{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/src/components/FunctionPanel/SpeakApplyMenu.vue","mtime":1611227050000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/css-loader/dist/cjs.js","mtime":1592792512947},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615566687412},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/postcss-loader/src/index.js","mtime":1584009011273},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/sass-loader/dist/cjs.js","mtime":1615566691505},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":1584009001591},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/index.js","mtime":1615566687412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8vQGltcG9ydCB1cmwoKTsg5byV5YWl5YWs5YWxY3Nz57G7Cgo="},{"version":3,"sources":["SpeakApplyMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA","file":"SpeakApplyMenu.vue","sourceRoot":"src/components/FunctionPanel","sourcesContent":["<!-- 举手组件 -->\n<template>\n    <div id=\"menu-speak-apply\">\n    </div>\n</template>\n\n<script>\n\nimport language from '../../language/main'\n\nconst store = BJY.store\nconst eventEmitter = BJY.eventEmitter\nconst auth = BJY.auth;\nconst userData = BJY.data.user;\n\n/**是否自动上麦 */\nauth.canOpenCameraWhenSpeaking = function (userType) {\n    return true;\n};\n\nexport default {\n  components: {},\n  data () {\n    return {\n      player: null\n    }\n  },\n  computed: {},\n  watch: {},\n  methods: {\n\n  },\n  created () {\n  },\n  mounted () {\n    // 绑定一个结束发言事件\n    eventEmitter.STOP_SPEAK_TRIGGER = 'stop_speak_trigger'\n    eventEmitter\n      .on(\n        eventEmitter.SPEAK_APPLY_RESULT_TIMEOUT,\n        (e, data) => {\n          console.log('timeout')\n          this.$Toast(language.TIP_SPEAK_APPLY_TIMEOUT)\n        }\n      )\n      .on(\n        eventEmitter.SPEAK_APPLY_RESULT_REJECT,\n        (e, data) => {\n          console.log('reject')\n          this.$Toast(language.TIP_SPEAK_APPLY_REJECT)\n        }\n      )\n      .on(\n        eventEmitter.SPEAK_APPLY_RESULT_ACCEPT,\n        (e, data) => {\n          console.log('accept')\n          this.$Toast(language.TIP_SPEAK_APPLY_ACCEPT)\n          eventEmitter.trigger(eventEmitter.MEDIA_SWITCH_TRIGGER, {\n            videoOn: true,\n            audioOn: true\n          })\n        }\n      )\n\n    BJY.SpeakApplyMenu.create({\n      element: $('#menu-speak-apply'),\n      replace: false,\n      // 举手按钮被点击\n      onApplyClick: () => {\n        if (store.get('class.started')) {\n          if (userData.active().length >= 2) {\n            this.$Toast('当前上台人数已满')\n            return;\n          }\n          BJY.userSpeak.startApply(10 * 1000)\n        } else {\n          this.$Toast(language.TIP_CLASS_NOT_START)\n          return\n        }\n      },\n      // 取消举手被点击\n      onCancelClick: () => {\n        BJY.userSpeak.cancelApply()\n      },\n      // 结束发言被点击\n      onStopClick: () => {\n        BJY.userSpeak.stopSpeak(BJY.store.get('user.id'))\n        eventEmitter.trigger(eventEmitter.STOP_SPEAK_TRIGGER)\n        eventEmitter.trigger(eventEmitter.MEDIA_SWITCH_TRIGGER, {\n          videoOn: false,\n          audioOn: false\n        })\n      }\n    })\n  },\n  beforeDestroy () {}\n}\n</script>\n\n<style lang='scss' scoped>\n//@import url(); 引入公共css类\n\n</style>\n"]}]}