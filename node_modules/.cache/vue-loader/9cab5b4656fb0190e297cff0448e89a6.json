{"remainingRequest":"/Users/liangzg/zixue/live-broad-cast/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzg/zixue/live-broad-cast/src/components/ModalPanel/RollCallTeacher.vue?vue&type=style&index=0&id=609bfebf&lang=scss&scoped=true&","dependencies":[{"path":"/Users/liangzg/zixue/live-broad-cast/src/components/ModalPanel/RollCallTeacher.vue","mtime":1611227050000},{"path":"/Users/liangzg/zixue/live-broad-cast/node_modules/css-loader/dist/cjs.js","mtime":1592792512947},{"path":"/Users/liangzg/zixue/live-broad-cast/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615566687412},{"path":"/Users/liangzg/zixue/live-broad-cast/node_modules/postcss-loader/src/index.js","mtime":1584009011273},{"path":"/Users/liangzg/zixue/live-broad-cast/node_modules/sass-loader/dist/cjs.js","mtime":1615566691505},{"path":"/Users/liangzg/zixue/live-broad-cast/node_modules/cache-loader/dist/cjs.js","mtime":1584009001591},{"path":"/Users/liangzg/zixue/live-broad-cast/node_modules/vue-loader/lib/index.js","mtime":1615566687412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojcm9sbC1jYWxsLWRpYWxvZyB7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBwYWRkaW5nOiAyNHB4OwogIGZvbnQtc2l6ZTogMTRweDsKCiAgJiA+IGRpdiB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICB9CgogIC5idG4tY2xvc2UgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAxMHB4OwogICAgcmlnaHQ6IDEwcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQoKICAuYmVmb3JlLXJvbGwtY2FsbCB7CiAgfQoKICAucm9sbC1jYWxsLWluZyB7CiAgfQoKICAuYWZ0ZXItcm9sbC1jYWxsIHsKICB9CgogIC5idG4gewogICAgbWFyZ2luOiAyMHB4IGF1dG87CiAgICBiYWNrZ3JvdW5kOiAjMTc5NWZmOwogICAgaGVpZ2h0OiA0MHB4OwogICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgICBwYWRkaW5nOiAwIDIwcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBjb2xvcjogI2ZmZjsKICB9Cn0K"},{"version":3,"sources":["RollCallTeacher.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RollCallTeacher.vue","sourceRoot":"src/components/ModalPanel","sourcesContent":["<!-- 点名组件实现： 点名没有独立的组件来实现，我们提供了一套事件驱动的点名系统 -->\n\n<template>\n  <div v-show=\"visible\" id=\"roll-call-dialog\" class=\"teacher\">\n    <div v-show=\"status === statusMap.before\" class=\"before-roll-call\">\n      <p>\n        请设置学生需要在\n        <input v-model=\"rollCallDuration\" type=\"number\" />\n        秒内响应\n      </p>\n      <div @click=\"startRollCall\" class=\"btn start-btn\">发起点名</div>\n    </div>\n\n    <div v-show=\"status === statusMap.ing\" class=\"roll-call-ing\">学生正在陆续答到中，{{ resultTimer }}秒后可查看点名结果，请稍后</div>\n\n    <div v-show=\"status === statusMap.after\" class=\"after-roll-call\">\n      <p class=\"result\">答到情况：答到{{ ackCount }}人，未答到{{ nackCount }}人</p>\n      <div class=\"btn\" @click=\"reCall\">再次点名</div>\n    </div>\n\n    <div class=\"btn-close\" @click=\"close\">X</div>\n  </div>\n</template>\n\n<script>\nimport language from \"../../language/main\";\n\nconst auth = BJY.auth;\nconst eventEmitter = BJY.eventEmitter;\n\nconst ROLL_CALL_STATUS = {\n    before: 0,\n    ing: 1,\n    after: 2\n}\n\nexport default {\n  data() {\n    return {\n      language: language,\n      status: 0,\n      isTeacher: auth.isTeacher(),\n      resultTimer: 60,\n      nextTimer: 60,\n      result: \"\",\n      rollCallDuration: 60,\n      visible: false,\n      status: ROLL_CALL_STATUS.before,\n      statusMap: ROLL_CALL_STATUS,\n      resultInterval: null,\n      ackCount: 0, // 答到人数\n      nackCount: 0, // 未答到人数\n    };\n  },\n  created() {\n    eventEmitter\n      .on(\"toggle_roll_call\", () => {\n        this.show();\n      })\n      .on(\n        // 点名结果\n        eventEmitter.ROLL_CALL_RESULT,\n        (e, data) => {\n          var result = data;\n        //  点名结果 \n          console.log(result);\n          this.status = ROLL_CALL_STATUS.after\n\n          this.ackCount = result.ackList.length\n          this.nackCount = result.nackList.length\n        }\n      )\n      .on(\n        // 点名开始\n        eventEmitter.ROLL_CALL,\n        () => {\n            this.resultTimer = this.rollCallDuration\n            this.status = ROLL_CALL_STATUS.ing\n            this.resultInterval = null\n            this.resultInterval = setInterval(() => {\n                if (this.resultTimer > 0) {\n                    --this.resultTimer;\n                } else {\n                    // 时间到了需要老师端主动触发结束\n                    eventEmitter.trigger(eventEmitter.ROLL_CALL_FINISH);\n                    clearInterval(this.resultInterval)\n                }\n            }, 1000);\n        }\n      );\n  },\n  methods: {\n    show() {\n      this.visible = true;\n    },\n    close() {\n      this.visible = false;\n    },\n    startRollCall() {\n      eventEmitter.trigger(eventEmitter.ROLL_CALL_TRIGGER, {\n        // 倒计时 秒\n        duration: this.rollCallDuration,\n      });\n    },\n    reCall() {\n        this.status = ROLL_CALL_STATUS.before\n    }\n  },\n  beforeDestroy() {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#roll-call-dialog {\n  background: #fff;\n  padding: 24px;\n  font-size: 14px;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .btn-close {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n  }\n\n  .before-roll-call {\n  }\n\n  .roll-call-ing {\n  }\n\n  .after-roll-call {\n  }\n\n  .btn {\n    margin: 20px auto;\n    background: #1795ff;\n    height: 40px;\n    line-height: 40px;\n    padding: 0 20px;\n    cursor: pointer;\n    color: #fff;\n  }\n}\n</style>\n"]}]}