{"remainingRequest":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzg/Downloads/bjy-live-vue-demo/src/components/FunctionPanel/ShareScreenMenu.vue?vue&type=style&index=0&id=035d5687&lang=scss&scoped=true&","dependencies":[{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/src/components/FunctionPanel/ShareScreenMenu.vue","mtime":1611227050000},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/css-loader/dist/cjs.js","mtime":1592792512947},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615566687412},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/postcss-loader/src/index.js","mtime":1584009011273},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/sass-loader/dist/cjs.js","mtime":1615566691505},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":1584009001591},{"path":"/Users/liangzg/Downloads/bjy-live-vue-demo/node_modules/vue-loader/lib/index.js","mtime":1615566687412}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovL0BpbXBvcnQgdXJsKCk7IOW8leWFpeWFrOWFsWNzc+exuwoK"},{"version":3,"sources":["ShareScreenMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA","file":"ShareScreenMenu.vue","sourceRoot":"src/components/FunctionPanel","sourcesContent":["<template>\n    <div v-show=\"canShareScreen\" id=\"menu-share-screen\">\n      <i class=\"icon icon-share\"></i>\n      <span class=\"bjy-screen-share\"></span>\n    </div>\n</template>\n\n<script>\nimport language from '../../language/main'\n\nlet auth = BJY.auth\nlet store = BJY.store\nlet eventEmitter = BJY.eventEmitter\nlet config = BJY.config\n\nauth.isClassStarted = function () {\n  return store.get('class.started')\n}\n\nauth.canShareScreen = function () {\n  return store.get('class.mediaType') !== config.MEDIA_TYPE_AUDIO &&\n            (auth.inClient() || auth.isWebRTC())\n}\n\nauth.inClient = function () {\n  return typeof window.cefQuery !== 'undefined'\n}\n\nauth.canSpeak = function () {\n  return auth.isTeacher() || (store.get('class.speakState') !== config.SPEAK_STATE_LIMIT)\n}\n\n/**\n * 是否可以程序分享\n *\n * @return {boolean}\n */\nauth.canProgramShareDesktop = function () {\n  return auth.inClient() && store.get('cefVersion') >= '6.3.0'\n}\n\nexport default {\n  components: {},\n  data () {\n    return {\n      canSpeak: false,\n      canShareScreen: auth.canShareScreen()\n    }\n  },\n  computed: {},\n  watch: {},\n  methods: {\n    checkCondition () {\n      if (!auth.isClassStarted() || !auth.canShareScreen()) {\n        this.$Toast(language.TIP_CLASS_NOT_START)\n        return false\n      }\n\n      if (!auth.canSpeak()) {\n        this.$Toast(language.TIP_SPEAK_LIMIT)\n        return false\n      }\n\n      return true\n    }\n  },\n  mounted () {\n    let element = $('.bjy-screen-share')\n    // 只有webrtc课程类型支持网页屏幕分享\n    element.text(language.BUTTON_SCREEN_START)\n    if (auth.isWebRTC()) {\n      var isScreenSharing = false\n\n      eventEmitter.on(\n        eventEmitter.ASSIST_MEDIA_PUBLISH,\n        (event, data) => {\n          if (BJY.is.mediaMainScreenShare(data.mediaId)) {\n            if (data.videoOn) {\n              isScreenSharing = true\n              element.text(language.BUTTON_SCREEN_STOP)\n            } else {\n              isScreenSharing = false\n              element.text(language.BUTTON_SCREEN_START)\n            }\n          }\n        }\n      )\n\n      element.click(() => {\n        if (isScreenSharing) {\n          eventEmitter.trigger(\n            eventEmitter.SCREEN_SHARE_STOP_TRIGGER\n          )\n        } else {\n          if (!auth.canSpeak()) {\n            this.$Toast('发言请先举手')\n            return\n          }\n          this.checkCondition() && BJY.ScreenShareExtensionWebrtc.start((data) => {\n            this.$Toast(data.msg)\n          })\n        }\n      })\n    }\n  },\n  beforeDestroy () {}\n}\n</script>\n\n<style lang='scss' scoped>\n//@import url(); 引入公共css类\n\n</style>\n"]}]}